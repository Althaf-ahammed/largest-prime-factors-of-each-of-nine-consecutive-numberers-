def find_factors(num):
    #Accepts a number and returns the list of all the factors of a given number
    factors = []
    for i in range(2,(num+1)):
        if(num%i==0):
            factors.append(i)
    return factors

def is_prime(num, i):
    #Accepts the number num and num/2 --> i and returns True if the number is prime ,else returns False
    if(i==1):
        return True
    elif(num%i==0):
        return False;
    else:
        return(is_prime(num,i-1))

def find_largest_prime_factor(list_of_factors):
    #Accepts the list of factors and returns the largest prime factor
    factors=[]
    large=0
    for i in list_of_factors:
        if(is_prime(i,i//2)==True):
            factors.append(i)
    large=max(factors)
    return large
    
    

def find_f(num):
    #Accepts the number and returns the largest prime factor of the number
    f_list=[]
    i=0
    number=num
    
    while (i!=9):
        lis=find_factors(number)
        f=find_largest_prime_factor(lis)
        f_list.append(f)
        i+=1
        number=num+i
    return f_list 

def find_g(num):
    #Accepts the number and returns the sum of the largest prime factors of the 9 consecutive numbers starting from the given number
    sum=0
    f=find_f(num)
    for i in range(len(f)):
        sum+=f[i]
    return sum

print(find_g(45))
